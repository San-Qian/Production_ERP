<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nosuchteam.mapper.MaterialReceiveMapper">
  <resultMap id="BaseResultMap" type="com.nosuchteam.bean.MaterialReceive">
    <id column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="material_id" jdbcType="VARCHAR" property="materialId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="receive_date" jdbcType="TIMESTAMP" property="receiveDate" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    receive_id, material_id, amount, receive_date, sender, receiver, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from material_receive
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </select>

  <select id="selectByReceiveId" parameterType="java.lang.String" resultMap="Map1">
    SELECT receive.receive_id,receive.amount,receive.receive_date,receive.sender,receive.receiver,receive.note,
    material.material_id
    from material_receive receive
    LEFT JOIN material ON receive.material_id=material.material_id
    WHERE receive.receive_id LIKE #{receiveId,jdbcType=VARCHAR}
  </select>

  <select id="selectByMaterialId" parameterType="java.lang.String" resultMap="Map1">
    SELECT receive.receive_id,receive.amount,receive.receive_date,receive.sender,receive.receiver,receive.note,
    material.material_id
    from material_receive `receive`
    LEFT JOIN material ON receive.material_id=material.material_id
    WHERE receive.material_id LIKE #{materialId,jdbcType=VARCHAR}
  </select>

  <resultMap id="Map1" type="com.nosuchteam.bean.MaterialReceive" extends="BaseResultMap">
    <id column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="receive_date" jdbcType="TIMESTAMP" property="receiveDate" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="note" jdbcType="VARCHAR" property="note" />
      <association property="material" javaType="com.nosuchteam.bean.Material">
        <result column="material_id" property="materialId"></result>
      </association>
  </resultMap>
  <select id="findAllMaterialReceive" resultMap="Map1">
    SELECT receive.receive_id,receive.amount,receive.receive_date,receive.sender,receive.receiver,receive.note,
    material.material_id
     FROM material_receive `receive`
     LEFT JOIN material ON receive.material_id=material.material_id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from material_receive
    where material_id = #{receiveId,jdbcType=VARCHAR}
  </delete>

  <update id="updateNote" >
    update material_receive set note=#{param2} where receive_id =#{param1}
  </update>

  <insert id="insert" parameterType="com.nosuchteam.bean.MaterialReceive">
    insert into material_receive (receive_id, material_id, amount, receive_date, sender, receiver, note)
    values (#{receiveId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{receiveDate,jdbcType=TIMESTAMP}, #{sender,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.nosuchteam.bean.MaterialReceive">
    insert into material_receive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nosuchteam.bean.MaterialReceive">
    update material_receive
    <set>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nosuchteam.bean.MaterialReceive">
    update material_receive
    set material_id = #{materialId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      sender = #{sender,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </update>
</mapper>